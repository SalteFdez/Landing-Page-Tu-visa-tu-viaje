---
// ProcessSteps.astro
const steps = [
  {
    image: "/assets/1.png",
    title: "Elegí tu destino"
  },
  {
    image: "/assets/2.png", 
    title: "Gestioná tu VISA"
  },
  {
    image: "/assets/3.png",
    title: "Contratá seguro y pasaje"
  },
  {
    image: "/assets/4.png",
    title: "Ingresá al mundo Tu Visa, Tu Viaje"
  },
  {
    image: "/assets/5.png",
    title: "¡Comenzá tu viaje!"
  },
];
---

<section id="proceso" class="w-full py-16 md:py-24 bg-white relative overflow-hidden">
  <div class="container mx-auto px-4 md:px-6 relative z-10">
    <!-- Header -->
    <div class="text-center mb-16">
      <h2 class="process-title text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 mb-4 leading-tight">
        ¿Cómo armar tu propia experiencia 
        <span class="text-transparent bg-clip-text bg-gradient-to-r from-[#E9744C] to-[#327BA8]">Working Holiday</span>?
      </h2>
      <p class="text-lg text-gray-600">
        Solo 5 pasos
      </p>
    </div>

    <!-- Steps Grid -->
    <div class="flex flex-wrap justify-center items-center gap-8 md:gap-12 lg:gap-16 max-w-6xl mx-auto">
      {steps.map((step, i) => (
        <div class="process-step group relative flex flex-col items-center">
          <!-- Línea conectora -->
          {i < steps.length - 1 && (
            <div class="hidden md:block absolute top-1/2 left-full w-8 md:w-12 lg:w-16 h-0.5 bg-gradient-to-r from-gray-300 to-transparent z-0 transform -translate-y-1/2"></div>
          )}
          
          <!-- Step Icon -->
          <div class="step-icon relative mb-4 group-hover:scale-110 transition-transform duration-300">
            <img 
              src={step.image} 
              alt={step.title}
              class="w-16 h-16 md:w-20 md:h-20 lg:w-24 lg:h-24 object-contain"
            />
          </div>
          
          <!-- Step Title -->
          <div class="text-center">
            <h3 class="text-sm md:text-base font-medium text-gray-900 group-hover:text-[#E9744C] transition-colors duration-300 max-w-24 md:max-w-32">
              {step.title}
            </h3>
          </div>
        </div>
      ))}
    </div>

    <!-- CTA Section -->
    <div class="text-center mt-16">
      <div class="bg-gradient-to-r from-[#E9744C] to-[#EFA297] rounded-2xl p-8 md:p-12 text-white">
        <h3 class="text-2xl md:text-3xl font-bold mb-4">
          ¿Listo para comenzar tu aventura?
        </h3>
        <p class="text-lg mb-6 opacity-90">
          Miles de viajeros ya confiaron en nosotros. ¡Es tu turno!
        </p>
        <button class="cta-button bg-white text-black px-8 py-4 rounded-xl font-semibold hover:bg-gray-100 transition-all duration-300 transform hover:scale-105">
          Comenzar ahora
        </button>
      </div>
    </div>
  </div>
</section>

<style>
  .cta-button {
    animation: slideInRight 0.8s ease-out 0.6s both;
  }
  
  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  .process-title {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 1s ease-out 0.3s forwards;
  }
  
  .process-step {
    opacity: 0;
    transform: translateY(30px);
  }
  
  .process-step:nth-child(1) { animation: fadeInUp 0.8s ease-out 0.5s forwards; }
  .process-step:nth-child(2) { animation: fadeInUp 0.8s ease-out 0.7s forwards; }
  .process-step:nth-child(3) { animation: fadeInUp 0.8s ease-out 0.9s forwards; }
  .process-step:nth-child(4) { animation: fadeInUp 0.8s ease-out 1.1s forwards; }
  .process-step:nth-child(5) { animation: fadeInUp 0.8s ease-out 1.3s forwards; }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .step-icon {
    position: relative;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .process-step {
      margin-bottom: 1rem;
    }
  }
</style>

<script>
  // @ts-nocheck - GSAP está disponible globalmente
  document.addEventListener('DOMContentLoaded', () => {
    if (typeof gsap !== 'undefined') {
      // Animación de scroll para los pasos
      gsap.registerPlugin(ScrollTrigger);
      
      // Animación principal de los pasos
      gsap.from('.process-step', {
        scrollTrigger: {
          trigger: '#proceso',
          start: 'top 80%',
          end: 'bottom 20%',
          toggleActions: 'play none none reverse'
        },
        y: 40,
        opacity: 0,
        duration: 0.8,
        stagger: 0.15,
        ease: 'power3.out'
      });
      
      // Animación de los iconos al hacer hover
      gsap.utils.toArray('.step-icon').forEach(icon => {
        icon.addEventListener('mouseenter', () => {
          gsap.to(icon, {
            scale: 1.1,
            duration: 0.3,
            ease: 'back.out(1.7)'
          });
        });
        
        icon.addEventListener('mouseleave', () => {
          gsap.to(icon, {
            scale: 1,
            duration: 0.3,
            ease: 'power2.out'
          });
        });
      });
      
      // Animación del CTA
      gsap.from('.text-center.mt-16', {
        scrollTrigger: {
          trigger: '.text-center.mt-16',
          start: 'top 90%',
          toggleActions: 'play none none reverse'
        },
        y: 30,
        opacity: 0,
        duration: 0.6,
        ease: 'power3.out'
      });
    }
  });
</script>
